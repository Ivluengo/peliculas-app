{"version":3,"sources":["helpers/getMovies.js","components/MovieItem.js","components/ListMovies.js","hooks/useFetchMovies.js","components/SearchMovies.js","App.js","index.js"],"names":["getMovies","query","a","url","console","log","fetch","resp","json","data","movies","results","map","movie","id","title","nota","vote_average","resumen","overview","fechaEstreno","release_date","poster","poster_path","backdrop","backdrop_path","MovieItem","props","className","src","alt","substr","ListMovies","searchMovieText","useState","loading","datosFetch","setDatosFetch","useEffect","then","setTimeout","useFetchMovies","SearchMovies","setSearchMovieText","inputText","setInputText","onSubmit","e","preventDefault","trim","length","handleSearchMovie","onChange","target","value","handleInputChange","type","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"2OA4BeA,EA5BA,uCAAG,WAAQC,GAAR,qBAAAC,EAAA,4DACE,mCACVC,EAFQ,4DACE,mCADF,kBAEoEF,GAAS,UAC3FG,QAAQC,IAAIJ,GAHE,SAIKK,MAAMH,GAJX,cAIRI,EAJQ,gBAKKA,EAAKC,OALV,cAKRC,EALQ,OAQRC,EAASD,EAAKE,QAAQC,KAAK,SAAAC,GAC7B,MAAO,CACHC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbC,KAAMH,EAAMI,aACZC,QAASL,EAAMM,SACfC,aAAcP,EAAMQ,aACpBC,OAAQT,EAAMU,YAAN,yCACgCV,EAAMU,aACxC,KACNC,SAAUX,EAAMY,cAAN,yCAC8BZ,EAAMY,eACxC,SAIdrB,QAAQC,IAAIK,GAxBE,kBAyBPA,GAzBO,4CAAH,sD,OCiBAgB,EAfG,SAAEC,GAAY,IAAD,EAE0CA,EAAMd,MAA/DE,GAFe,EAEnBD,GAFmB,EAEfC,OAAOC,EAFQ,EAERA,KAAME,EAFE,EAEFA,QAASE,EAFP,EAEOA,aAAcE,EAFrB,EAEqBA,OAFrB,EAE6BE,SAExD,OACI,sBAAKI,UAAU,yBAAf,UACI,qBAAKA,UAAU,8BAA8BC,IAAKP,EAAQQ,IAAKf,IAC/D,6BAAKA,IACL,uBAAOa,UAAU,yDAAjB,SAA2EZ,IAC3E,oBAAGY,UAAU,QAAb,0BAAyBR,KACzB,mBAAGQ,UAAU,mBAAb,SAAiCV,EAAQa,OAAO,EAAE,IAAM,YCqBrDC,EA5BI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,ECFrB,SAAEA,GAAsB,IAAD,EACNC,mBAAS,CACzCzB,KAAM,GACN0B,SAAS,IAH6B,mBACnCC,EADmC,KACvBC,EADuB,KA2B1C,OArBAC,qBAAU,WACHF,EAAW3B,KAAK,IACf4B,EAAc,CACV5B,KAAM,GACN0B,SAAS,IAGjBnC,EAAUiC,GACTM,MAAM,SAAC7B,GACJ8B,YAAW,WACPH,EAAc,CACV5B,KAAMC,EACNyB,SAAS,MAEd,UAGR,CAACF,IAIGG,EDhBiBK,CAAeR,GAAhCxB,EATiC,EASjCA,KAAM0B,EAT2B,EAS3BA,QAEb,OACI,qCACI,6BAAKF,IAEL,sBAAKL,UAAU,uBAAf,UACMO,GAAW,4CACZ1B,EAAKG,KAAK,SAAAC,GACP,GAAGA,EAAMS,OACN,OAAO,cAAC,EAAD,CAA0BT,MAAOA,GAAjBA,EAAMC,cESrC4B,EA/BM,SAAEf,GAAY,IACvBgB,EAAuBhB,EAAvBgB,mBADsB,EAEIT,mBAAS,IAFb,mBAEvBU,EAFuB,KAEZC,EAFY,KAiB9B,OACI,uBAAMC,SAAU,SAACC,GAAD,OAdM,SAACA,GACvBA,EAAEC,iBACEJ,EAAUK,OAAOC,OAAS,GAC1BP,EAAmBC,GAEvBC,EAAa,IASQM,CAAkBJ,IAAvC,UACI,uBACIK,SAAW,SAACL,GAAD,OARG,SAACA,GACvBF,EAAaE,EAAEM,OAAOC,OAOGC,CAAkBR,IACnCO,MAAOV,EACPhB,UAAU,OACV4B,KAAK,OACLC,YAAY,mBAEZ,gDCTDC,EAdH,WAAO,IAAD,EACgCxB,mBAAS,IADzC,mBACPD,EADO,KACUU,EADV,KAGhB,OACI,sBAAKf,UAAU,8BAAf,UACE,2CACA,cAAC,EAAD,CAAce,mBAAoBA,IAElC,cAAC,EAAD,CAAYV,gBAAiBA,QCPrC0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.43a4bef2.chunk.js","sourcesContent":["const getMovies = async ( query ) => {\r\n    const API_KEY = '594939a196832017634a0d7b0271311b';\r\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query || 'matrix'}`;\r\n    console.log(query);\r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n\r\n\r\n    const movies = data.results.map( movie => {\r\n        return {\r\n            id: movie.id,\r\n            title: movie.title,\r\n            nota: movie.vote_average,\r\n            resumen: movie.overview,\r\n            fechaEstreno: movie.release_date,\r\n            poster: movie.poster_path \r\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n                : null,\r\n            backdrop: movie.backdrop_path \r\n                ? `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`\r\n                : null\r\n        }\r\n    } );\r\n\r\n    console.log(movies);    \r\n    return movies;\r\n}\r\n\r\nexport default getMovies;","import React from 'react'\r\n\r\nconst MovieItem = ( props ) => {\r\n\r\n    const { id, title, nota, resumen, fechaEstreno, poster, backdrop } = props.movie;\r\n\r\n    return (\r\n        <div className='movieItem bg-white p-3'>\r\n            <img className='u-max-full-width rounded-xl' src={poster} alt={title}/>\r\n            <h5>{title}</h5>\r\n            <small className='nota bg-yellow-400 p-3 rounded-full font-bold text-2xl'>{nota}</small>\r\n            <p className='-ml-2'>ðŸ“… {fechaEstreno}</p>\r\n            <p className='descripcion mb-2'>{resumen.substr(0,80) + '...'}</p>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieItem\r\n","import React /*, { useEffect, useState }*/ from 'react'\r\n// import getMovies from '../helpers/getMovies'\r\nimport { useFetchMovies } from '../hooks/useFetchMovies';\r\nimport MovieItem from './MovieItem';\r\n\r\nconst ListMovies = ( {searchMovieText} ) => {\r\n    // useEffect(()=> {       \r\n    //     getMovies(searchMovieText)\r\n    //     .then( (movies) => {\r\n    //         setAllMovies(movies)\r\n    //     } );\r\n        \r\n    // }, [searchMovieText]);  \r\n    \r\n    const {data, loading} = useFetchMovies(searchMovieText);\r\n\r\n    return (\r\n        <>\r\n            <h1>{searchMovieText}</h1>\r\n\r\n            <div className='movieGrid grid gap-8'>\r\n                { loading && <h3>Loading...</h3> }\r\n                {data.map( movie => {\r\n                    if(movie.poster) {\r\n                       return <MovieItem key={movie.id} movie={movie} />\r\n                    }\r\n    } )}\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListMovies\r\n","import { useState, useEffect } from 'react';\r\nimport getMovies from './../helpers/getMovies';\r\n\r\nconst useFetchMovies = ( searchMovieText ) => {\r\n    const [datosFetch, setDatosFetch] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=> {   \r\n        if(datosFetch.data[0]) {\r\n            setDatosFetch({\r\n                data: [],\r\n                loading: true\r\n            })\r\n        } \r\n        getMovies(searchMovieText)\r\n        .then( (movies) => {\r\n            setTimeout(()=>{\r\n                setDatosFetch({\r\n                    data: movies,\r\n                    loading: false\r\n                }) \r\n            }, 500)\r\n        } );\r\n        \r\n    }, [searchMovieText]);  \r\n\r\n\r\n\r\n    return datosFetch;\r\n}\r\n\r\nexport { useFetchMovies };","import React, { useState } from 'react';\r\n\r\nconst SearchMovies = ( props ) => {\r\n    const { setSearchMovieText } = props;\r\n    const [inputText, setInputText] = useState('');\r\n\r\n    const handleSearchMovie = (e) => {\r\n        e.preventDefault();\r\n        if (inputText.trim().length > 2) {\r\n            setSearchMovieText(inputText);\r\n        }\r\n        setInputText('');\r\n    }\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputText(e.target.value);       \r\n    }\r\n   \r\n        \r\n    return (\r\n        <form onSubmit={(e)=>handleSearchMovie(e)}  >\r\n            <input \r\n                onChange={ (e)=> handleInputChange(e) }\r\n                value={inputText}\r\n                className='mr-4'\r\n                type='text'\r\n                placeholder='PelÃ­cula...'\r\n                ></input>\r\n                <button>Buscar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchMovies;\r\n","import { useState } from \"react\";\nimport ListMovies from \"./components/ListMovies\";\n// import SearchMoviesClass from \"./components/SearchMoviesClass\";\nimport SearchMovies from \"./components/SearchMovies\";\n\nconst App = () => {\n    const [searchMovieText, setSearchMovieText] = useState('');   \n\n  return (\n      <div className='container text-center mt-24'>\n        <h1>Movie App</h1>\n        <SearchMovies setSearchMovieText={setSearchMovieText} />\n        {/* <SearchMoviesClass setSearchMovieText={setSearchMovieText} /> */}\n        <ListMovies searchMovieText={searchMovieText} />\n        \n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/mine.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}